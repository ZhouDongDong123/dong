<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.funzzz.mapper.CustomershareMapper" >
  <resultMap id="BaseResultMap" type="com.funzzz.model.Customershare" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="emp_id" property="empId" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cid, emp_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.funzzz.model.CustomershareExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from customershare
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from customershare
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 查询全部 -->
  <select id="selectAll" resultMap="BaseResultMap">
    select  <include refid="Base_Column_List" />  from customershare
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from customershare
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.funzzz.model.CustomershareExample" >
    delete from customershare
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  
  <select id="selectByPrimaryKeyByCidAndEmpId" resultType="Integer" parameterType="com.funzzz.model.Customershare" >
    select  id
    from customershare
    where cid=#{cid} and emp_id=#{empId}
  </select>
  
<!--  外键检测 -->
  <select id="selectForeignKeyByCid" resultType="Integer" parameterType="Integer" >
    select  count(id)
    from customershare
    where cid=#{cid}
  </select>
  <!--  外键检测 -->
  <select id="selectForeignKeyByEmpId" resultType="Integer" parameterType="Integer" >
    select  count(id)
    from customershare
    where emp_id=#{emp_id}
  </select>
  
  
  
  
  
  
  <delete id="deleteCustomershareByCidAndEmpId" parameterType="com.funzzz.model.Customershare" >
   	 delete from customershare where cid=#{cid} and emp_id=#{empId}
  </delete>
  
  
  
  <insert id="insert" parameterType="com.funzzz.model.Customershare" >
    insert into customershare (id, cid, emp_id
      )
    values (#{id,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, #{empId,jdbcType=INTEGER}
      )
  </insert>
  
  <!-- sql原生插入多条数据 -->
  <insert id="insertMoreData" parameterType="com.funzzz.model.Customershare" >
    insert into customershare (id, cid, emp_id) values 
    
    <foreach collection="list" item="cs" open="" close="" separator=",">
    	(#{cs.id,jdbcType=INTEGER}, #{cs.cid,jdbcType=INTEGER}, #{cs.empId,jdbcType=INTEGER})
    </foreach>
    
  </insert>
  
  
  <insert id="insertSelective" parameterType="com.funzzz.model.Customershare" >
    insert into customershare
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="empId != null" >
        emp_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="empId != null" >
        #{empId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.funzzz.model.CustomershareExample" resultType="java.lang.Integer" >
    select count(*) from customershare
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update customershare
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cid != null" >
        cid = #{record.cid,jdbcType=INTEGER},
      </if>
      <if test="record.empId != null" >
        emp_id = #{record.empId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update customershare
    set id = #{record.id,jdbcType=INTEGER},
      cid = #{record.cid,jdbcType=INTEGER},
      emp_id = #{record.empId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.funzzz.model.Customershare" >
    update customershare
    <set >
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="empId != null" >
        emp_id = #{empId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  
   <!-- sql多条语句更新 -->
  <insert id="updateMoreData" parameterType="com.funzzz.model.Customershare" >

    <foreach collection="list" item="cs" open="" close="" separator=";">
    	 update customershare 
    	 <set >
		      <if test="cs.cid != null" >
		        cid = #{cs.cid,jdbcType=INTEGER},
		      </if>
		      <if test="cs.empId != null" >
		        emp_id = #{cs.empId,jdbcType=INTEGER},
		      </if>
   		 </set>
    where id = #{cs.id,jdbcType=INTEGER}
    </foreach>
    
  </insert>
  
  
  <update id="updateByPrimaryKey" parameterType="com.funzzz.model.Customershare" >
    update customershare
    set cid = #{cid,jdbcType=INTEGER},
      emp_id = #{empId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>